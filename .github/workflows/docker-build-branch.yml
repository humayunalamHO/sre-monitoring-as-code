name: 'Docker Build Branch'

on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish:
    name: 'Branch Publish'
    permissions:
      contents: read
      packages: write
      security-events: write
    runs-on: ubuntu-latest
 
#    if: contains(github.event.pull_request.labels.*.name, 'smoketest') == true
    steps:
      #Checks-out our repository under $GITHUB_WORKSPACE, so our workflow can access it.
      - name: Checkout
        uses: actions/checkout@v3

        #Logs into Github registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


#      - name: Step
#        run: echo ${{ github.sha }}         

      - name: Calculate metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.sha }}

      - name: Build container
        uses: docker/build-push-action@v3
        with:
          context: ./monitoring-as-code
          file: ./monitoring-as-code/Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PACKAGE_TOKEN=${{secrets.GITHUB_TOKEN}}
            MAC_VERSION='#${{ github.event.number }}'
      

#      - name: Run deploy script
#        run: docker run -v "$PWD"/output,target=/output --mount type=bind,source="$PWD"/mixin-defs,target=/input -it ${{ steps.meta.outputs.tags }} -m monitoring -rd -i input -o output
      - name: Build promtool container
        run: docker build -t sre-promtool ${GITHUB_WORKSPACE}/monitoring-as-code/tools/promtool

      - name: Run promtool container
        run: docker run ${GITHUB_WORKSPACE}/monitoring-as-code/output/prometheus-rules:/data sre-promtool check rules /data/*